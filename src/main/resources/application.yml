debug: true
# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
jwt:
  header: Authorization
  secret: my-very-secret-key
logging:
  level:
    org.springframework.security: DEBUG
spring:
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  datasource:
    url: jdbc:mysql://localhost:9999/rexoubapp?useSSL=false&verifyServerCertificate=false
    username: rexoubapp
    password: rexoubapp
    driver-class-name: com.mysql.jdbc.Driver
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
  jpa:
    show-sql: false
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
    hibernate:
      ddl-auto: none
  data:
    mongodb:
      host: localhost
      port: 27017
      database: rexoubapp
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  mail:
    host: php7.do.edusalguero.com
    port: 587
    username: edu@php7.do.edusalguero.com
    password: 123qweasd
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: false
management:
  security:
    enabled: true # set to false to disable 'default' Spring Boot security

rexoubapp:
  publicSSHKey: "THE PUBLIC KEY"
  privateKeyPath: "/Users/edusalguero/.ssh/id_rsa"
  passphrase:   "edusalguero"
  email:
    from: edu@php7.do.edusalguero.com
  domain:
    events:
      exchange-name: "domainEvents"
      notifications-queue-name: "notificationsQueue"
